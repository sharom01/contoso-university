@model PagedList.IPagedList<ContosoSite.Models.Student>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{
    ViewBag.Title = "Students";
}

<h2>List of students</h2>
<p>
    This is a simple ASP.NET MVC web application based on a tutorial at <a href="https://learn.microsoft.com/en-us/aspnet/mvc/overview/getting-started/database-first-development/" target="_blank">Microsoft Learn</a>.
    It simulates a fictitious student enrollment site using fictional data.
</p>

<p>
    @Html.ActionLink("Create New", "Create") &nbsp; | &nbsp;
    @Html.ActionLink("List of enrollments", "Index", "Enrollments")
</p>

@using (Html.BeginForm("Index", "Students", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.FNameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Enrollment Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Middle Name
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EnrollmentDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MiddleName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.StudentID }) |
                @Html.ActionLink("Details", "Details", new { id = item.StudentID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.StudentID })
            </td>
        </tr>
    }

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
